#!/usr/bin/env python3
"""
–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç HTTP vs Playwright –º–µ—Ç–æ–¥–æ–≤
–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ https://m-sistema.ru/
"""
import sys
import os
import asyncio
import time
import json
from datetime import datetime
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

async def compare_methods(url: str):
    """–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–≤—É—Ö –º–µ—Ç–æ–¥–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏"""
    
    print(f"üîÑ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è: {url}")
    print("=" * 80)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
    try:
        from app.features.audit.adapters.fetcher import get_content_bundle_http
        from app.features.audit.adapters.playwright_fetcher import fetch_with_playwright, PLAYWRIGHT_AVAILABLE
        
        results = {}
        
        # ============================================
        # –¢–ï–°–¢ 1: HTTP –º–µ—Ç–æ–¥ (—Å—Ç–∞—Ä—ã–π)
        # ============================================
        print("\nüåê –¢–ï–°–¢ 1: HTTP –º–µ—Ç–æ–¥ (—Å—Ç–∞—Ä—ã–π)")
        print("-" * 40)
        
        start_time = time.time()
        try:
            http_result = await get_content_bundle_http(url)
            http_time = time.time() - start_time
            
            home_text = http_result.get('home_text', '')
            pricing_text = http_result.get('pricing_text', '')
            pricing_url = http_result.get('pricing_url', '')
            requires_js = http_result.get('requires_js', False)
            
            print(f"‚úÖ HTTP –º–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ {http_time:.2f} —Å–µ–∫—É–Ω–¥")
            print(f"üìÑ –†–∞–∑–º–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {len(home_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üí∞ –ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ü–µ–Ω: {'–î–∞' if pricing_url else '–ù–µ—Ç'}")
            if pricing_url:
                print(f"   URL —Ü–µ–Ω: {pricing_url}")
                print(f"   –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ü–µ–Ω: {len(pricing_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç JavaScript: {'–î–∞' if requires_js else '–ù–µ—Ç'}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
            home_words = len(home_text.split()) if home_text else 0
            pricing_words = len(pricing_text.split()) if pricing_text else 0
            
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π: {home_words}")
            if pricing_words > 0:
                print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ü–µ–Ω: {pricing_words}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            has_navigation = any(word in home_text.lower() for word in ['–º–µ–Ω—é', '–Ω–∞–≤–∏–≥–∞—Ü–∏—è', '–≥–ª–∞–≤–Ω–∞—è', '–æ –∫–æ–º–ø–∞–Ω–∏–∏'])
            has_content = home_words > 100
            has_contacts = any(word in home_text.lower() for word in ['—Ç–µ–ª–µ—Ñ–æ–Ω', 'email', '–∫–æ–Ω—Ç–∞–∫—Ç', '+7', '@'])
            
            print(f"üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è: {'–î–∞' if has_navigation else '–ù–µ—Ç'}")
            print(f"üìù –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {'–î–∞' if has_content else '–ù–µ—Ç'}")
            print(f"üìû –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ç–∞–∫—Ç—ã: {'–î–∞' if has_contacts else '–ù–µ—Ç'}")
            
            results['http'] = {
                'success': True,
                'time': http_time,
                'home_text_length': len(home_text),
                'home_words': home_words,
                'pricing_found': bool(pricing_url),
                'pricing_text_length': len(pricing_text),
                'pricing_words': pricing_words,
                'requires_js': requires_js,
                'has_navigation': has_navigation,
                'has_content': has_content,
                'has_contacts': has_contacts,
                'pricing_url': pricing_url
            }
            
        except Exception as e:
            http_time = time.time() - start_time
            print(f"‚ùå HTTP –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
            results['http'] = {
                'success': False,
                'time': http_time,
                'error': str(e)
            }
        
        # ============================================
        # –¢–ï–°–¢ 2: Playwright –º–µ—Ç–æ–¥ (–Ω–æ–≤—ã–π)
        # ============================================
        print(f"\nüé≠ –¢–ï–°–¢ 2: Playwright –º–µ—Ç–æ–¥ (–Ω–æ–≤—ã–π)")
        print("-" * 40)
        
        if not PLAYWRIGHT_AVAILABLE:
            print("‚ùå Playwright –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, —Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω")
            results['playwright'] = {
                'success': False,
                'error': 'Playwright –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
            }
        else:
            start_time = time.time()
            try:
                playwright_result = await fetch_with_playwright(url)
                playwright_time = time.time() - start_time
                
                if playwright_result.get('success'):
                    title = playwright_result.get('title', '')
                    content = playwright_result.get('content', '')
                    meta_description = playwright_result.get('meta_description', '')
                    meta_keywords = playwright_result.get('meta_keywords', '')
                    links = playwright_result.get('links', [])
                    images = playwright_result.get('images', [])
                    status_code = playwright_result.get('status_code', 0)
                    
                    print(f"‚úÖ Playwright –º–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ {playwright_time:.2f} —Å–µ–∫—É–Ω–¥")
                    print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title[:60]}{'...' if len(title) > 60 else ''}")
                    print(f"üìÑ –†–∞–∑–º–µ—Ä HTML –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {status_code}")
                    print(f"üîó –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {len(links)}")
                    print(f"üñºÔ∏è  –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(images)}")
                    
                    if meta_description:
                        print(f"üìù Meta description: {meta_description[:100]}{'...' if len(meta_description) > 100 else ''}")
                    if meta_keywords:
                        print(f"üè∑Ô∏è  Meta keywords: {meta_keywords}")
                    
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ HTML
                    from bs4 import BeautifulSoup
                    try:
                        soup = BeautifulSoup(content, 'html.parser')
                        # –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏ —Å—Ç–∏–ª–∏
                        for script in soup(["script", "style"]):
                            script.decompose()
                        text_content = soup.get_text()
                        # –û—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                        lines = (line.strip() for line in text_content.splitlines())
                        chunks = (phrase.strip() for line in lines for phrase in line.split("  "))
                        clean_text = ' '.join(chunk for chunk in chunks if chunk)
                        
                        words_count = len(clean_text.split())
                        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ: {words_count}")
                        
                        # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ü–µ–Ω—ã –≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–∫–∞—Ö
                        pricing_links = []
                        pricing_keywords = ['—Ü–µ–Ω—ã', '—Ü–µ–Ω–∞', '—Ç–∞—Ä–∏—Ñ', '—Ç–∞—Ä–∏—Ñ—ã', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '–ø—Ä–∞–π—Å', 'pricing', 'price']
                        
                        for link in links:
                            link_text = link.get('text', '').lower()
                            link_href = link.get('href', '').lower()
                            if any(keyword in link_text or keyword in link_href for keyword in pricing_keywords):
                                pricing_links.append(link)
                        
                        print(f"üí∞ –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ü–µ–Ω—ã: {len(pricing_links)}")
                        for plink in pricing_links[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                            print(f"   - {plink.get('text', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')}: {plink.get('href', '')}")
                        
                        # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                        has_navigation_pw = any(word in clean_text.lower() for word in ['–º–µ–Ω—é', '–Ω–∞–≤–∏–≥–∞—Ü–∏—è', '–≥–ª–∞–≤–Ω–∞—è', '–æ –∫–æ–º–ø–∞–Ω–∏–∏', '—É—Å–ª—É–≥–∏', '–ø—Ä–æ–¥—É–∫—Ç'])
                        has_content_pw = words_count > 100
                        has_contacts_pw = any(word in clean_text.lower() for word in ['—Ç–µ–ª–µ—Ñ–æ–Ω', 'email', '–∫–æ–Ω—Ç–∞–∫—Ç', '+7', '@', '—Å–≤—è–∑—å'])
                        
                        print(f"üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è: {'–î–∞' if has_navigation_pw else '–ù–µ—Ç'}")
                        print(f"üìù –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {'–î–∞' if has_content_pw else '–ù–µ—Ç'}")
                        print(f"üìû –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ç–∞–∫—Ç—ã: {'–î–∞' if has_contacts_pw else '–ù–µ—Ç'}")
                        
                        results['playwright'] = {
                            'success': True,
                            'time': playwright_time,
                            'title': title,
                            'content_length': len(content),
                            'text_length': len(clean_text),
                            'words_count': words_count,
                            'status_code': status_code,
                            'links_count': len(links),
                            'images_count': len(images),
                            'pricing_links_count': len(pricing_links),
                            'meta_description': meta_description,
                            'meta_keywords': meta_keywords,
                            'has_navigation': has_navigation_pw,
                            'has_content': has_content_pw,
                            'has_contacts': has_contacts_pw,
                            'pricing_links': pricing_links[:3]  # –ü–µ—Ä–≤—ã–µ 3 —Å—Å—ã–ª–∫–∏
                        }
                        
                    except ImportError:
                        print("‚ö†Ô∏è  BeautifulSoup –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–ø—É—â–µ–Ω")
                        results['playwright'] = {
                            'success': True,
                            'time': playwright_time,
                            'content_length': len(content),
                            'links_count': len(links),
                            'images_count': len(images)
                        }
                        
                else:
                    print(f"‚ùå Playwright –Ω–µ —Å–º–æ–≥ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É: {playwright_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                    results['playwright'] = {
                        'success': False,
                        'time': playwright_time,
                        'error': playwright_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                    }
                    
            except Exception as e:
                playwright_time = time.time() - start_time
                print(f"‚ùå Playwright –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
                results['playwright'] = {
                    'success': False,
                    'time': playwright_time,
                    'error': str(e)
                }
        
        # ============================================
        # –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó
        # ============================================
        print(f"\nüìä –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó")
        print("=" * 80)
        
        if results.get('http', {}).get('success') and results.get('playwright', {}).get('success'):
            http_data = results['http']
            pw_data = results['playwright']
            
            print(f"‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
            print(f"   HTTP: {http_data['time']:.2f} —Å–µ–∫")
            print(f"   Playwright: {pw_data['time']:.2f} —Å–µ–∫")
            if pw_data['time'] > http_data['time']:
                print(f"   üêå Playwright –º–µ–¥–ª–µ–Ω–Ω–µ–µ –Ω–∞ {pw_data['time'] - http_data['time']:.2f} —Å–µ–∫")
            else:
                print(f"   üöÄ Playwright –±—ã—Å—Ç—Ä–µ–µ –Ω–∞ {http_data['time'] - pw_data['time']:.2f} —Å–µ–∫")
            
            print(f"\nüìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:")
            print(f"   HTTP: {http_data['home_words']} —Å–ª–æ–≤")
            print(f"   Playwright: {pw_data.get('words_count', 0)} —Å–ª–æ–≤")
            
            content_diff = pw_data.get('words_count', 0) - http_data['home_words']
            if content_diff > 0:
                print(f"   üìà Playwright –∏–∑–≤–ª–µ–∫ –Ω–∞ {content_diff} —Å–ª–æ–≤ –±–æ–ª—å—à–µ (+{content_diff/http_data['home_words']*100:.1f}%)")
            elif content_diff < 0:
                print(f"   üìâ HTTP –∏–∑–≤–ª–µ–∫ –Ω–∞ {abs(content_diff)} —Å–ª–æ–≤ –±–æ–ª—å—à–µ")
            else:
                print(f"   ‚öñÔ∏è  –û–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤")
            
            print(f"\nüîç –ö–∞—á–µ—Å—Ç–≤–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:")
            print(f"   HTTP - –ù–∞–≤–∏–≥–∞—Ü–∏—è: {'‚úÖ' if http_data['has_navigation'] else '‚ùå'}, –ö–æ–Ω—Ç–µ–Ω—Ç: {'‚úÖ' if http_data['has_content'] else '‚ùå'}, –ö–æ–Ω—Ç–∞–∫—Ç—ã: {'‚úÖ' if http_data['has_contacts'] else '‚ùå'}")
            print(f"   Playwright - –ù–∞–≤–∏–≥–∞—Ü–∏—è: {'‚úÖ' if pw_data['has_navigation'] else '‚ùå'}, –ö–æ–Ω—Ç–µ–Ω—Ç: {'‚úÖ' if pw_data['has_content'] else '‚ùå'}, –ö–æ–Ω—Ç–∞–∫—Ç—ã: {'‚úÖ' if pw_data['has_contacts'] else '‚ùå'}")
            
            print(f"\nüí∞ –ü–æ–∏—Å–∫ —Ü–µ–Ω:")
            print(f"   HTTP: {'‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ü–µ–Ω' if http_data['pricing_found'] else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ'}")
            print(f"   Playwright: {'‚úÖ –ù–∞–π–¥–µ–Ω–æ ' + str(pw_data.get('pricing_links_count', 0)) + ' —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ü–µ–Ω—ã' if pw_data.get('pricing_links_count', 0) > 0 else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ'}")
            
            print(f"\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
            
            # –õ–æ–≥–∏–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            pw_score = 0
            http_score = 0
            
            # –û—á–∫–∏ –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            if pw_data.get('words_count', 0) > http_data['home_words']:
                pw_score += 2
            elif http_data['home_words'] > pw_data.get('words_count', 0):
                http_score += 1
            
            # –û—á–∫–∏ –∑–∞ –ø–æ–∏—Å–∫ —Ü–µ–Ω
            if pw_data.get('pricing_links_count', 0) > 0:
                pw_score += 2
            if http_data['pricing_found']:
                http_score += 2
            
            # –û—á–∫–∏ –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
            if pw_data['has_content'] and pw_data['has_contacts']:
                pw_score += 1
            if http_data['has_content'] and http_data['has_contacts']:
                http_score += 1
            
            # –®—Ç—Ä–∞—Ñ –∑–∞ –≤—Ä–µ–º—è (–µ—Å–ª–∏ Playwright —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω—ã–π)
            if pw_data['time'] > http_data['time'] * 3:
                pw_score -= 1
            
            if pw_score > http_score:
                print(f"   üé≠ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Playwright (Score: {pw_score} vs {http_score})")
                print(f"   üí° Playwright –ª—É—á—à–µ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç")
            elif http_score > pw_score:
                print(f"   üåê –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTP (Score: {http_score} vs {pw_score})")
                print(f"   üí° HTTP –±—ã—Å—Ç—Ä–µ–µ –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞")
            else:
                print(f"   ‚öñÔ∏è  –û–±–∞ –º–µ—Ç–æ–¥–∞ –ø–æ–∫–∞–∑–∞–ª–∏ –ø–æ—Ö–æ–∂–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (Score: {pw_score} vs {http_score})")
                print(f"   üí° –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTP –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–ª–∏ Playwright –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏")
                
        elif results.get('http', {}).get('success'):
            print("‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ HTTP –º–µ—Ç–æ–¥")
            print("üí° Playwright –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTP fallback")
            
        elif results.get('playwright', {}).get('success'):
            print("‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ Playwright –º–µ—Ç–æ–¥") 
            print("üí° HTTP –Ω–µ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è, Playwright –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞")
            
        else:
            print("‚ùå –û–±–∞ –º–µ—Ç–æ–¥–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏")
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é —Å–∞–π—Ç–∞ –∏–ª–∏ —Å–µ—Ç—å—é")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"comparison_results_{timestamp}.json"
        
        full_results = {
            'url': url,
            'timestamp': timestamp,
            'results': results
        }
        
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(full_results, f, ensure_ascii=False, indent=2)
        
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {filename}")
        
        return results
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")
        return None

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    test_url = "https://skyeng.ru/"
    
    print("üß™ –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–´–ô –¢–ï–°–¢: HTTP vs Playwright")
    print(f"üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π —Å–∞–π—Ç: {test_url}")
    print(f"üìÖ –î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    try:
        results = asyncio.run(compare_methods(test_url))
        
        if results:
            print(f"\nüéâ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"\n‚ùå –¢–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è")
            
    except KeyboardInterrupt:
        print(f"\nüõë –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()