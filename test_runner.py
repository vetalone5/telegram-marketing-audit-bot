#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º pytest
"""

import sys
import traceback

def test_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
    try:
        from app.core.utils import normalize_url
        print("‚úÖ app.core.utils.normalize_url –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ app.core.utils.normalize_url: {e}")
        return False
    
    try:
        from app.features.audit.adapters.fetcher import find_pricing_link
        print("‚úÖ app.features.audit.adapters.fetcher.find_pricing_link –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ app.features.audit.adapters.fetcher.find_pricing_link: {e}")
        return False
    
    return True

def test_normalize_url():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç normalize_url"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º normalize_url...")
    try:
        from app.core.utils import normalize_url
        
        # –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
        test_cases = [
            ("site.com", "https://site.com"),
            ("  google.com  ", "https://google.com"),
            ("http://example.org", "https://example.org"),
            ("https://test.com", "https://test.com"),
        ]
        
        for input_val, expected in test_cases:
            result = normalize_url(input_val)
            if result == expected:
                print(f"‚úÖ '{input_val}' -> '{result}'")
            else:
                print(f"‚ùå '{input_val}' -> '{result}' (–æ–∂–∏–¥–∞–ª—Å—è '{expected}')")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ normalize_url: {e}")
        traceback.print_exc()

def test_find_pricing():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç find_pricing_link"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º find_pricing_link...")
    try:
        from app.features.audit.adapters.fetcher import find_pricing_link
        
        html = '''
        <html>
            <body>
                <a href="/about">–û –Ω–∞—Å</a>
                <a href="/prices">–¶–µ–Ω—ã</a>
                <a href="/contact">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
            </body>
        </html>
        '''
        
        result = find_pricing_link(html, "https://example.com")
        expected = "https://example.com/prices"
        
        if result == expected:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ü–µ–Ω—ã: {result}")
        else:
            print(f"‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}, –æ–∂–∏–¥–∞–ª—Å—è: {expected}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ find_pricing_link: {e}")
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É...")
    
    if not test_imports():
        print("\n‚ùå –ò–º–ø–æ—Ä—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏, —Ç–µ—Å—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω—ã")
        sys.exit(1)
    
    test_normalize_url()
    test_find_pricing()
    
    print("\n‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å: poetry run pytest tests/ -v")